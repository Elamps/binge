{"ast":null,"code":"import tokenService from './tokenService';\nconst BASE_URL = '/api/auth/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    }),\n    body: JSON.stringify(user)\n  }).then(res => {\n    console.log(res, '<-- response object');\n    return res.json();\n  }).then(json => {\n    if (json.token) return json;\n    console.log(json, '<-- the error');\n    throw new Error(`${json.err}`);\n  }).then(({\n    token\n  }) => {\n    tokenService.setToken(token);\n  });\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    }),\n    body: JSON.stringify(creds)\n  }).then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  }).then(({\n    token\n  }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};","map":{"version":3,"sources":["/Users/Marcus/code/sandbox/binge/src/services/authService.js"],"names":["tokenService","BASE_URL","signup","user","fetch","method","headers","Headers","body","JSON","stringify","then","res","console","log","json","token","Error","err","setToken","getUser","getUserFromToken","logout","removeToken","login","creds","ok"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,MAAMC,QAAQ,GAAG,YAAjB;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,SAAOC,KAAK,CAACH,QAAQ,GAAG,QAAZ,EAAsB;AAChCI,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAC,sBAAgB;AAAjB,KAAZ,CAFuB;AAGhCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAH0B,GAAtB,CAAL,CAKNQ,IALM,CAKDC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,qBAAjB;AACA,WAAOA,GAAG,CAACG,IAAJ,EAAP;AACD,GARM,EASNJ,IATM,CASDI,IAAI,IAAI;AACZ,QAAGA,IAAI,CAACC,KAAR,EAAe,OAAOD,IAAP;AACfF,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAAkB,eAAlB;AACA,UAAM,IAAIE,KAAJ,CAAW,GAAEF,IAAI,CAACG,GAAI,EAAtB,CAAN;AACD,GAbM,EAcNP,IAdM,CAcD,CAAC;AAAEK,IAAAA;AAAF,GAAD,KAAe;AACnBhB,IAAAA,YAAY,CAACmB,QAAb,CAAsBH,KAAtB;AACD,GAhBM,CAAP;AAiBD;;AAED,SAASI,OAAT,GAAmB;AACjB,SAAOpB,YAAY,CAACqB,gBAAb,EAAP;AACD;;AAED,SAASC,MAAT,GAAkB;AAChBtB,EAAAA,YAAY,CAACuB,WAAb;AACD;;AAED,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAOrB,KAAK,CAACH,QAAQ,GAAG,OAAZ,EAAqB;AAC/BI,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAC,sBAAgB;AAAjB,KAAZ,CAFsB;AAG/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAee,KAAf;AAHyB,GAArB,CAAL,CAKNd,IALM,CAKDC,GAAG,IAAI;AACX;AACA,QAAIA,GAAG,CAACc,EAAR,EAAY,OAAOd,GAAG,CAACG,IAAJ,EAAP;AACZ,UAAM,IAAIE,KAAJ,CAAU,kBAAV,CAAN;AACD,GATM,EAUNN,IAVM,CAUD,CAAC;AAACK,IAAAA;AAAD,GAAD,KAAahB,YAAY,CAACmB,QAAb,CAAsBH,KAAtB,CAVZ,CAAP;AAWD;;AAED,eAAe;AACbd,EAAAA,MADa;AAEbkB,EAAAA,OAFa;AAGbE,EAAAA,MAHa;AAIbE,EAAAA;AAJa,CAAf","sourcesContent":["import tokenService from './tokenService';\nconst BASE_URL = '/api/auth/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    console.log(res, '<-- response object')\n    return res.json();\n  })\n  .then(json => {\n    if(json.token) return json;\n    console.log(json, '<-- the error')\n    throw new Error(`${json.err}`)\n  })\n  .then(({ token }) => {\n    tokenService.setToken(token);\n  })\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};"]},"metadata":{},"sourceType":"module"}