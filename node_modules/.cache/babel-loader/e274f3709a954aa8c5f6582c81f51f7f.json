{"ast":null,"code":"import tokenService from'./tokenService';var BASE_URL='/api/auth/';function signup(user){return fetch(BASE_URL+'signup',{method:'POST',headers:new Headers({'Content-Type':'application/json'}),body:JSON.stringify(user)}).then(function(res){console.log(res,'<-- response object');return res.json();}).then(function(json){if(json.token)return json;console.log(json,'<-- the error');throw new Error(\"\".concat(json.err));}).then(function(_ref){var token=_ref.token;tokenService.setToken(token);});}function getUser(){return tokenService.getUserFromToken();}function logout(){tokenService.removeToken();}function login(creds){return fetch(BASE_URL+'login',{method:'POST',headers:new Headers({'Content-Type':'application/json'}),body:JSON.stringify(creds)}).then(function(res){// Valid login if we have a status of 2xx (res.ok)\nif(res.ok)return res.json();throw new Error('Bad Credentials!');}).then(function(_ref2){var token=_ref2.token;return tokenService.setToken(token);});}export default{signup:signup,getUser:getUser,logout:logout,login:login};","map":{"version":3,"sources":["/Users/Marcus/code/sandbox/binge/src/services/authService.js"],"names":["tokenService","BASE_URL","signup","user","fetch","method","headers","Headers","body","JSON","stringify","then","res","console","log","json","token","Error","err","setToken","getUser","getUserFromToken","logout","removeToken","login","creds","ok"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAAyB,gBAAzB,CACA,GAAMC,CAAAA,QAAQ,CAAG,YAAjB,CAEA,QAASC,CAAAA,MAAT,CAAgBC,IAAhB,CAAsB,CACpB,MAAOC,CAAAA,KAAK,CAACH,QAAQ,CAAG,QAAZ,CAAsB,CAChCI,MAAM,CAAE,MADwB,CAEhCC,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAY,CAAC,eAAgB,kBAAjB,CAAZ,CAFuB,CAGhCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAH0B,CAAtB,CAAL,CAKNQ,IALM,CAKD,SAAAC,GAAG,CAAI,CACXC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAiB,qBAAjB,EACA,MAAOA,CAAAA,GAAG,CAACG,IAAJ,EAAP,CACD,CARM,EASNJ,IATM,CASD,SAAAI,IAAI,CAAI,CACZ,GAAGA,IAAI,CAACC,KAAR,CAAe,MAAOD,CAAAA,IAAP,CACfF,OAAO,CAACC,GAAR,CAAYC,IAAZ,CAAkB,eAAlB,EACA,KAAM,IAAIE,CAAAA,KAAJ,WAAaF,IAAI,CAACG,GAAlB,EAAN,CACD,CAbM,EAcNP,IAdM,CAcD,cAAe,IAAZK,CAAAA,KAAY,MAAZA,KAAY,CACnBhB,YAAY,CAACmB,QAAb,CAAsBH,KAAtB,EACD,CAhBM,CAAP,CAiBD,CAED,QAASI,CAAAA,OAAT,EAAmB,CACjB,MAAOpB,CAAAA,YAAY,CAACqB,gBAAb,EAAP,CACD,CAED,QAASC,CAAAA,MAAT,EAAkB,CAChBtB,YAAY,CAACuB,WAAb,GACD,CAED,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACpB,MAAOrB,CAAAA,KAAK,CAACH,QAAQ,CAAG,OAAZ,CAAqB,CAC/BI,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAY,CAAC,eAAgB,kBAAjB,CAAZ,CAFsB,CAG/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAee,KAAf,CAHyB,CAArB,CAAL,CAKNd,IALM,CAKD,SAAAC,GAAG,CAAI,CACX;AACA,GAAIA,GAAG,CAACc,EAAR,CAAY,MAAOd,CAAAA,GAAG,CAACG,IAAJ,EAAP,CACZ,KAAM,IAAIE,CAAAA,KAAJ,CAAU,kBAAV,CAAN,CACD,CATM,EAUNN,IAVM,CAUD,mBAAEK,CAAAA,KAAF,OAAEA,KAAF,OAAahB,CAAAA,YAAY,CAACmB,QAAb,CAAsBH,KAAtB,CAAb,EAVC,CAAP,CAWD,CAED,cAAe,CACbd,MAAM,CAANA,MADa,CAEbkB,OAAO,CAAPA,OAFa,CAGbE,MAAM,CAANA,MAHa,CAIbE,KAAK,CAALA,KAJa,CAAf","sourcesContent":["import tokenService from './tokenService';\nconst BASE_URL = '/api/auth/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    console.log(res, '<-- response object')\n    return res.json();\n  })\n  .then(json => {\n    if(json.token) return json;\n    console.log(json, '<-- the error')\n    throw new Error(`${json.err}`)\n  })\n  .then(({ token }) => {\n    tokenService.setToken(token);\n  })\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};"]},"metadata":{},"sourceType":"module"}